{
  "hash": "b5033b2f72dd67e592a1e78a0ccf8126",
  "result": {
    "markdown": "---\ntitle: \"Clustering drivers\"\neditor: visual\ndescription: |\n  Using Dynamic Time Warping (DTW) algorithm to cluster drivers\nimage: \"dtw-example.png\"\ndate: \"2022-08-13\"\nwarning: false\ncache: true\nbibliography: library.bib\n---\n\n\n## Introduction\n\nSpeed-related and large truck collisions are the top two situations with highest road fatalities in Ontario [@MinistryofTransportationOntario2020]. Many studies have found differences in driving styles - such as following a truck too closely - that may help understand the reasons for collisions [@Ossen2011; @Durrani2016].\n\nA first step to identify different driving styles is to group together those drivers who have a 'similar' driving style. Then the aggregated measures of drivers' socio-demographic characteristics and driving history may help label a certain style of a group. But how do you define similarity?\n\n## Determining Similarity\n\nDefining similarity is a challenge because each driver has multiple data points e.g., speed that varies over time. For example, the following shows the speed profiles (also called as trajectories) of three drivers in lane 1 on Interstate-80 (I-80) in United States [based on the cleaned I80 data from @Montanino2015]:\n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-1_c3c04dae22558f0e05fcbda2db936dfe'}\n\n:::\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-2_d9e0e9110eb04a2d29481bafc5a5146b'}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(tidyverse))\n\ndf_2_drivers <- df %>% \n  filter(Lane == 1,\n         Vehicle.ID %in% c(204, 206, 218))\n\nggplot(data = df_2_drivers,\n       aes(group = Vehicle.ID, x = Time, y = svel)) +\n  geom_path(aes(color = as.character(Vehicle.ID))) +\n  labs(x = \"Time (s)\", y = \"Speed (m/s)\",\n       color = \"Vehicle ID\") \n```\n\n::: {.cell-output-display}\n![](clustering-drivers_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nSo, which of the two trajectories above are the most similar? Qualitatively, we may say that speed trajectories of vehicles `204` and `206` seem to be be alike in magnitude and pattern, while vehicle `218` is different. But how do we quantify the similarity?\n\n### Dynamic Time Warping\n\nWe may estimate the difference between speeds of 2 vehicles at each point in time and sum up all the differences to get an overall similarity measure. But this won't work when the time-series of speed are unequal in length. This approach also ignores the similar pattern (e.g., increase in speed) after a time lag. Dynamic Time Warping (DTW) algorithm can account for this similarity with/without a time lag, and also compares each value with every other value between the two time-series. Therefore, a DTW score is a measure of dissimilarity between two time-series. The higher the score, more is the dissimilarity. You can learn the basics of DTW with [this tutorial](http://www.phon.ox.ac.uk/jcoleman/old_SLP/Lecture_5/DTW_explanation.html).\n\nThe following code shows how to determine the DTW score between the speeds of the vehicles `204` and `206`:\n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-3_d6f36c04528f3dc92dbd8c518b48216d'}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(dtw))\n\n\ndataa <- df_2_drivers %>% \n  filter(Vehicle.ID==204) %>% \n  pull(svel)\n\n\nquery <- df_2_drivers %>% \n  filter(Vehicle.ID==206) %>% \n  pull(svel)\n\n\n\nalignment <- dtw(query, dataa, keep=TRUE)\n\n\nplot(alignment, type=\"twoway\")\n```\n\n::: {.cell-output-display}\n![](clustering-drivers_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\npaste0(\"DTW score between vehicles 204 and 206: \", alignment$distance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"DTW score between vehicles 204 and 206: 155.26969\"\n```\n:::\n:::\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-4_c9d055bf0fa106759d4b3dc783f63c20'}\n\n:::\n\n\nSimilarly, the DTW score between vehicles `204` and `218` is 240.33987. Since this score is higher than the previous one, it confirms our visual inference that vehicles `204` and `206` have more similar speeds than vehicles `204` and `218`.\n\n## Clustering Drivers using DTW score as a distance measure\n\nSo far we have seen how to compare pairs of vehicles using DTW score as a dissimilarity measure. We now want to use DTW score to compare all pairs of vehicles. Not only that, we want to use multiple variables, i.e., speed, speed-difference and spacing between two vehicles, etc. Since all of these variables change over time, they are considered as multivariate time-series.\\\nClustering algorithms, such as Hierarchical Clustering, can group together those vehicles/drivers that have small dissimilarities i.e., DTW score. The `dtwclust` package in R [@dtwclust] automates the calculation of the DTW score and clustering them.  \n\n\n### Data\n\nWe are going to use data from 500 randomly sampled vehicles on lanes 1, 2, and 3 from the I-80 vehicle trajectories database. These vehicles were observed for at least 30 seconds. The selected data below contains the speed, speed-difference and spacing only.\n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-5_76a11366d20ba5ba0057f797cb3c2768'}\n\n```{.r .cell-code}\nset.seed(123)\nsampled_vehs <- df %>% \n  pull(Vehicle.ID) %>% \n  unique() %>% \n  sample(., 500)\n\ndf_sampled <- df %>% \n  filter(Vehicle.ID %in% sampled_vehs) %>% \n  select(Vehicle.ID, Time, svel, frspacing, dV)\n\ndf_sampled %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 5\n  Vehicle.ID  Time  svel frspacing       dV\n       <int> <dbl> <dbl>     <dbl>    <dbl>\n1         11   0    4.42      11.6 -0.00292\n2         11   0.1  4.42      11.6 -0.00103\n3         11   0.2  4.42      11.6  0.00108\n4         11   0.3  4.43      11.6  0.00458\n5         11   0.4  4.43      11.6  0.0106 \n6         11   0.5  4.44      11.6  0.0210 \n```\n:::\n:::\n\n\n\nThe structure of the data above is called as a `dataframe` in R. Unfortunately, `dtwclust` does not accept a `dataframe`. Therefore, we are reshaping the data in a `list` format that would contain a matrix for each vehicle. Following shows what it looks like for vehicles `11` and `24`:  \n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-6_efe04554c16e8347ae70b6ae3379430e'}\n\n```{.r .cell-code}\ndf_matrix <- df_sampled %>% \n  split(.$Vehicle.ID, drop = T) %>% \n  purrr::map(~ .x[, c(\"svel\", \"frspacing\", \"dV\"\n  )]) %>% \n  purrr::map(as.matrix) \n\n\nstr(df_matrix, list.len=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 500\n $ 11  : num [1:646, 1:3] 4.42 4.42 4.42 4.43 4.43 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:3] \"svel\" \"frspacing\" \"dV\"\n $ 24  : num [1:613, 1:3] 4 3.78 4 4.2 4.35 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:3] \"svel\" \"frspacing\" \"dV\"\n  [list output truncated]\n```\n:::\n:::\n\n\n## Clustering\n\nNow we use the `tsclust` function from the `dtwclust` package to cluster the vehicles using hierarchical clustering with DTW score as a distance measure. We assume here that the number of clusters, `k` are 2. Moreover, we normalize the data using `zscore`:  \n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-7_3bffa4a603026f6025e70280c9a4ce18'}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(dtwclust))\n\nclusters_gp <- df_matrix %>% \n  tsclust(., \n          k = 2L,                 # assuming clusters\n          distance = \"dtw_basic\", # this is dtw score\n          seed = 390,             # to reproduce results\n          type=\"hierarchical\",    # type of clustering\n          control = hierarchical_control(method = \"ward.D\"),\n          preproc = zscore) # method in hc\n\nclusters_gp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhierarchical clustering with 2 clusters\nUsing dtw_basic distance\nUsing PAM (Hierarchical) centroids\nUsing method ward.D \nUsing zscore preprocessing\n\nTime required for analysis:\n   user  system elapsed \n 456.99    0.53  123.39 \n\nCluster sizes with average intra-cluster distance:\n\n  size  av_dist\n1  256 1154.451\n2  244 1299.892\n```\n:::\n:::\n\n\nThe vehicles are now clustered and have cluster numbers. To visualize them, we need to include these numbers in the dataframe `df_sampled`:  \n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-8_9938220748ab215101a8bf4a3e7b6bc7'}\n\n```{.r .cell-code}\nGps <- as.data.frame(cutree(clusters_gp, k = 2)) # num of clusters\ncolnames(Gps) <- \"Gp\"\nGps$Vehicle.ID <- row.names(Gps)\nrow.names(Gps) <- NULL\nGps$Vehicle.ID <- as.integer(Gps$Vehicle.ID)\n\n\n## Getting the clustering info into the original data\ndf_clustered <- df_sampled %>% \n  filter(Vehicle.ID %in% sampled_vehs) %>% \n  left_join(x=., y=Gps, by = \"Vehicle.ID\")\n\ndf_clustered %>% head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 6\n  Vehicle.ID  Time  svel frspacing       dV    Gp\n       <int> <dbl> <dbl>     <dbl>    <dbl> <int>\n1         11   0    4.42      11.6 -0.00292     1\n2         11   0.1  4.42      11.6 -0.00103     1\n3         11   0.2  4.42      11.6  0.00108     1\n```\n:::\n:::\n\n\n\nPlots of each variable are shown below. The numbers at the top represent the cluster numbers:\n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-9_caa07b736639136e3ca9c64544dfe505'}\n\n```{.r .cell-code}\n# speed\nggplot(data = df_clustered,\n       aes(x = Time, y = svel)) +\n  geom_line(aes(group=Vehicle.ID), color = \"grey\") +\n  geom_smooth(method=\"lm\") +\n  facet_wrap(~ Gp) +\n  labs(x = \"Time (s)\", y = \"Speed (m/s)\", title = \"Speed\")\n```\n\n::: {.cell-output-display}\n![](clustering-drivers_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# spacing\nggplot(data = df_clustered,\n       aes(x = Time, y = frspacing)) +\n  geom_line(aes(group=Vehicle.ID), color = \"grey\") +\n  geom_smooth(method=\"lm\") +\n  facet_wrap(~ Gp) +\n  labs(x = \"Time (s)\", y = \"Front-to-rear Spacing (m)\", title = \"Spacing\")\n```\n\n::: {.cell-output-display}\n![](clustering-drivers_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n\nAn interesting finding in these plots is that drivers in cluster 1 increased their speeds while drivers in cluster 2 decreased their speeds over time. This clustering exercise raises an interesting exploratory question: Why drivers in cluster 1 had higher spacing and speed towards the end of observation? But we won't dig into that in this post. You can now see the utility of DTW as an exploratory tool in investigating driver behaviour. Try it on your own data!  \n\n\n## Another Example\n\nI leave you with one more application of DTW that was a joint work to cluster drivers based on their kinematics data, as well as other interesting variables. See the presentation and paper below from the proceedings of Road Safety and Simulation Conference.  \n\n\n::: panel-tabset\n## Presentation\n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-10_301a4677de5b17a0a2743822f55c6b11'}\n<iframe src=\"https://www.nrso.ntua.gr/rss2022/wp-content/uploads/2022/06/RSS2022_Presentation_157.pdf\" width=\"672\" height=\"400px\" data-external=\"1\"></iframe>\n:::\n\n\n## Paper\n\n\n::: {.cell hash='clustering-drivers_cache/html/unnamed-chunk-11_1d10427469f7b75eaec221b0d8a2e8c4'}\n<iframe src=\"https://www.nrso.ntua.gr/rss2022/wp-content/uploads/2022/06/RSS2022_paper_157.pdf\" width=\"672\" height=\"400px\" data-external=\"1\"></iframe>\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}