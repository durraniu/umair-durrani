{
  "hash": "4c07c546f138dbe44224556c47508b48",
  "result": {
    "markdown": "---\ntitle: \"Images as Facet Labels in ggplot2\"\ndescription: \"The power of {ggtext}\"\nformat: \n  html:\n    page-layout: full\nwarning: false\ntoc: false\ncategories:\n  - visualization\n  - ggplot2\n  - ggh4x\n  - ggtext\n---\n\n\nIn this post, I will show you how to replace the facet labels in ggplot2 with images. The images I'll use in this post are country flags. Let's start with loading the required packages:  \n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(jsonlite))\nsuppressPackageStartupMessages(library(ggtext))\nsuppressPackageStartupMessages(library(gapminder))\nsuppressPackageStartupMessages(library(ggh4x))\n```\n:::\n\n\n## Data\n\nI am going to get the images of flags of countries that are in the `gapminder` dataset. The flag images are available in this [Github repo](https://github.com/hampusborgos/country-flags). First, {jsonlite} will help in getting a json of country codes and names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_code <- jsonlite::read_json(\"https://raw.githubusercontent.com/hampusborgos/country-flags/main/countries.json\") |> \n  data.frame() |>\n  pivot_longer(cols = everything(), names_to = \"abb\", values_to = \"country\") |> \n  mutate(abb = tolower(abb),\n         abb = stringr::str_remove(abb, \"\\\\.$\"))\n\nhead(country_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  abb   country             \n  <chr> <chr>               \n1 ad    Andorra             \n2 ae    United Arab Emirates\n3 af    Afghanistan         \n4 ag    Antigua and Barbuda \n5 ai    Anguilla            \n6 al    Albania             \n```\n:::\n:::\n\n\nNext, I join the `country_code` with `gapminder`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngm_joined <- gapminder |> \n  left_join(country_code, by = \"country\") |> \n  drop_na(abb) \n\nhead(gm_joined)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  country     continent  year lifeExp      pop gdpPercap abb  \n  <chr>       <fct>     <int>   <dbl>    <int>     <dbl> <chr>\n1 Afghanistan Asia       1952    28.8  8425333      779. af   \n2 Afghanistan Asia       1957    30.3  9240934      821. af   \n3 Afghanistan Asia       1962    32.0 10267083      853. af   \n4 Afghanistan Asia       1967    34.0 11537966      836. af   \n5 Afghanistan Asia       1972    36.1 13079460      740. af   \n6 Afghanistan Asia       1977    38.4 14880372      786. af   \n```\n:::\n:::\n\n\nI know that many countries are dropped as not all countries are stored with the exact same string in both dataframes. But I'm not going to worry about that in th is post :)  \n\nSince each country flag is stored as a png in the `png250px` folder on the repo, I create a url based on the country abbreviation as a new column. This will be helpful in downloading the flag images in the next step.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngm_joined <- gm_joined |> \n  mutate(url = paste0(\"https://github.com/hampusborgos/country-flags/blob/main/png250px/\", abb, \".png?raw=true\")) \n\ncountry_flag_urls <- gm_joined |>\n  distinct(country, url) |> \n  mutate(country = gsub(\" \", \"\", country))\n\nurls <- country_flag_urls$url\nnames(urls) <- country_flag_urls$country\n\nhead(country_flag_urls)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  country     url                                                               \n  <chr>       <chr>                                                             \n1 Afghanistan https://github.com/hampusborgos/country-flags/blob/main/png250px/…\n2 Albania     https://github.com/hampusborgos/country-flags/blob/main/png250px/…\n3 Algeria     https://github.com/hampusborgos/country-flags/blob/main/png250px/…\n4 Angola      https://github.com/hampusborgos/country-flags/blob/main/png250px/…\n5 Argentina   https://github.com/hampusborgos/country-flags/blob/main/png250px/…\n6 Australia   https://github.com/hampusborgos/country-flags/blob/main/png250px/…\n```\n:::\n:::\n\n\nNow that I have the url to each country flag, I am ready to download the images to a folder named `flags`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(urls, paste0(\"flags/\", names(urls), \".png\"), mode=\"wb\")\n```\n:::\n\n\n\n## Theme for flags\n\nThe trick is to use `ggtext::element_markdown()` for facet strips to replace the facet labels with images. Therefore, I first generate the markdown for reading images:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nflag_markdown <- paste0(\"<img src=\", list.files(\"flags/\", full.names = TRUE), \" width='100'/>\")\n\nnames(flag_markdown) <- names(urls)\n\nhead(flag_markdown)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                   Afghanistan \n\"<img src=flags/Afghanistan.png width='100'/>\" \n                                       Albania \n    \"<img src=flags/Albania.png width='100'/>\" \n                                       Algeria \n    \"<img src=flags/Algeria.png width='100'/>\" \n                                        Angola \n     \"<img src=flags/Angola.png width='100'/>\" \n                                     Argentina \n  \"<img src=flags/Argentina.png width='100'/>\" \n                                     Australia \n  \"<img src=flags/Australia.png width='100'/>\" \n```\n:::\n:::\n\n\nNow each country name and corresponding markdown for its flag image is available in `flag_markdown`. I also add the continents to this vector so that the plot contains information about the continents as well as countries:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontinents <- as.character(unique(gm_joined$continent))\nnames(continents) <- continents\n\nflag_markdown <- c(flag_markdown, continents)\n```\n:::\n\n\nNext, I create a theme that will use `ggtext::element_markdown()` to replace the strip text with image:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_flag <- function(base_size = 20,\n                          title_size = 20,\n                         ...){\n  # CUSTOM THEME:\n  ggplot2::theme_minimal(base_size = base_size) +\n    ggplot2::theme(\n      # title\n      plot.title = element_text(size = title_size),\n      plot.title.position = \"plot\",\n      \n      #strip\n      strip.text.x = element_markdown(size = 30),\n      ...\n    )\n}\n```\n:::\n\n\n## Flags!\n\nTo demonstrate the use of `ggtext::element_markdown()`, I'm going to plot life expectancy over GDP per capita in different countries. I also utilize the `ggh4x::facet_nested_wrap()` function to label both the continents and countries:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngm_joined |> \n  filter(country %in% country_flag_urls$country) |>\n  ggplot(mapping = aes(gdpPercap, lifeExp)) +\n  geom_smooth() +\n  labs(x = \"GDP\", y = \"Life Expectancy\") + \n  facet_nested_wrap(~ continent + country, nest_line = TRUE, labeller = as_labeller(flag_markdown),\n             scales = \"free\",\n             ncol = 5) +\n  theme_flag() \n```\n\n::: {.cell-output-display}\n![](images_in_facets_files/figure-html/unnamed-chunk-9-1.png){width=1920}\n:::\n:::\n",
    "supporting": [
      "images_in_facets_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}