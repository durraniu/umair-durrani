{
  "hash": "05c6bf155c45906852e48820bb7e34aa",
  "result": {
    "markdown": "---\ntitle: Autocomplete Character/Factor values in RStudio\ndate: '2021-01-01'\n---\n\n\n## Credit\n\nThis post is based on [Ayush Patel's post](https://ayushpatel.netlify.app/2020/12/05/the-package-patch-code-completion/) that describes the use of the `patch` package that lets you choose from a menu of character/factor values in RStudio.\n\n# Install the `patch` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"r-rudra/patch\")\n```\n:::\n\n\nThe [official description](https://github.com/r-rudra/patch) of the package is:\n\n> {patch} is #rstats package for patching functions on the fly \n\n\n\n# Load the `patch` package\n\nThe `patch` package has a script named `usecases.R` that shows the common use cases of the package. It is located in the installed package folder as shown below:\n\n![](usecases_patch.gif)\n\n\nIf you open the `usecases.R` script, you'll see that contains a function called `auto_complete_dplyr_filter`, as shown in the image below:\n\n![](usecases_script.PNG)  \n\n\nTherefore, we need to load this function to get the feature of autocompleting the character or factor values in a `dplyr::filter()`:  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(system.file(\"embedded\",\"usecases.R\",package = \"patch\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nThese are designed for R-Studio\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n\n\n\n## Autocomplete in action\n\nNow we can easily select the desired character/factor value from the autocomplete menu. Let's first load a data set and see the factor values in it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"chickwts\")\n\nchickwts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   weight      feed\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n11    309   linseed\n12    229   linseed\n13    181   linseed\n14    141   linseed\n15    260   linseed\n16    203   linseed\n17    148   linseed\n18    169   linseed\n19    213   linseed\n20    257   linseed\n21    244   linseed\n22    271   linseed\n23    243   soybean\n24    230   soybean\n25    248   soybean\n26    327   soybean\n27    329   soybean\n28    250   soybean\n29    193   soybean\n30    271   soybean\n31    316   soybean\n32    267   soybean\n33    199   soybean\n34    171   soybean\n35    158   soybean\n36    248   soybean\n37    423 sunflower\n38    340 sunflower\n39    392 sunflower\n40    339 sunflower\n41    341 sunflower\n42    226 sunflower\n43    320 sunflower\n44    295 sunflower\n45    334 sunflower\n46    322 sunflower\n47    297 sunflower\n48    318 sunflower\n49    325  meatmeal\n50    257  meatmeal\n51    303  meatmeal\n52    315  meatmeal\n53    380  meatmeal\n54    153  meatmeal\n55    263  meatmeal\n56    242  meatmeal\n57    206  meatmeal\n58    344  meatmeal\n59    258  meatmeal\n60    368    casein\n61    390    casein\n62    379    casein\n63    260    casein\n64    404    casein\n65    318    casein\n66    352    casein\n67    359    casein\n68    216    casein\n69    222    casein\n70    283    casein\n71    332    casein\n```\n:::\n:::\n\n\n\nNow, do a filter on the `feed`:\n\n\n![](patch_filter.gif)  \n\n\nAnd the result is:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchickwts %>% \n  filter(feed == \"linseed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   weight    feed\n1     309 linseed\n2     229 linseed\n3     181 linseed\n4     141 linseed\n5     260 linseed\n6     203 linseed\n7     148 linseed\n8     169 linseed\n9     213 linseed\n10    257 linseed\n11    244 linseed\n12    271 linseed\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}